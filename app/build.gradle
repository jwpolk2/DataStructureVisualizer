apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.datastructurevisualizer"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

//    jacocoTestReport {
//        reports {
//            xml.enabled true
//            html.enabled true
//            csv.enabled true
//        }
//    }
//
//    task jacocoTestReport(type: JacocoReport, dependsOn: ['testPlayDebugUnitTest', 'createPlayDebugCoverageReport']) {
//
//        reports {
//            xml.enabled = true
//            html.enabled = true
//        }
//
//        def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
//        def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
//        def mainSrc = "${project.projectDir}/src/main/java"
//
//        getSourceDirectories().getFrom(files([mainSrc]));
//        getClassDirectories().getFrom(files([debugTree]));
//        executionData = fileTree(dir: "$buildDir", includes: [
//                "jacoco/testPlayDebugUnitTest.exec",
//                "outputs/code-coverage/playDebugAndroidTest/connected/*coverage.ec"
//        ])
//    }
}



dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0-beta01'
    androidTestImplementation 'androidx.test:runner:1.3.0'

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.0.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
//    classpath 'io.fabric.tools:gradle:1.27.1'
}

android {
    // ...
    testOptions {
        unitTests.returnDefaultValues = true
    }
}